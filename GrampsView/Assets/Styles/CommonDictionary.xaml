<ResourceDictionary
    x:Class="SharedSharp.Assets.Styles.CommonDictionary"
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:sharedsharp="clr-namespace:SharedSharp.Common;assembly=SharedSharp">

    <!--  Version 16  -->

    <ResourceDictionary.MergedDictionaries>

        <!--  Default dictionarys  -->
        <ResourceDictionary Source="/Assets/Styles/AppThemeDictionary.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--
        ******************************************************
        Button Styles
        ******************************************************
    -->

    <!--  Create a Base Style for a Button Style  -->
    <Style x:Key="SSButtonStyle" TargetType="Button">
        <Setter Property="BorderWidth" Value="1" />
        <Setter Property="CornerRadius" Value="3" />
        <Setter Property="HorizontalOptions" Value="Center" />
        <Setter Property="Margin" Value="10" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="FontSize" Value="{x:Static sharedsharp:SharedSharpFontSize.FontSmall}" />
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Dark={StaticResource SecondaryContainerDark}, Light={StaticResource SecondaryContainerLight}}" />
        <Setter Property="TextColor" Value="{AppThemeBinding Dark={StaticResource OnSecondaryContainerDark}, Light={StaticResource OnSecondaryContainerLight}}" />
        <Setter Property="BorderColor" Value="{AppThemeBinding Dark={StaticResource OnSecondaryContainerDark}, Light={StaticResource OnSecondaryContainerLight}}" />
    </Style>

    <Style
        x:Key="SSButtonMenu"
        BasedOn="{StaticResource SSButtonStyle}"
        TargetType="Button">
        <Setter Property="Padding" Value="3" />
        <Setter Property="Margin" Value="3" />
        <Setter Property="HorizontalOptions" Value="Center" />
    </Style>

    <!--
        ******************************************************
        ContentPage Styles
        ******************************************************
    -->

    <!--  Create a ContentPage style  -->
    <Style x:Key="SSBaseContentPage" TargetType="ContentPage">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Dark={StaticResource BackgroundDark}, Light={StaticResource BackgroundLight}}" />
    </Style>

    <!--
        ******************************************************
        Frame Styles
        ******************************************************
    -->

    <!--  Create a Frame Card Style  -->
    <Style x:Key="SSFrameCardStyle" TargetType="Frame">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Dark={StaticResource SurfaceDark}, Light={StaticResource SurfaceLight}}" />
        <Setter Property="BorderColor" Value="{AppThemeBinding Dark={StaticResource SecondaryContainerDark}, Light={StaticResource SecondaryContainerLight}}" />
        <Setter Property="CornerRadius" Value="3" />
        <Setter Property="HasShadow" Value="True" />
        <Setter Property="HorizontalOptions" Value="Center" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Margin" Value="1" />
    </Style>

    <!--  Create a Style for a Button Menu Frame  -->
    <Style
        x:Key="SSButtonMenuFrameStyle"
        BasedOn="{StaticResource SSFrameCardStyle}"
        TargetType="Frame">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Dark={StaticResource SecondaryContainerDark}, Light={StaticResource SecondaryContainerLight}}" />
        <Setter Property="BorderColor" Value="{AppThemeBinding Dark={StaticResource SecondaryDark}, Light={StaticResource SecondaryLight}}" />
        <Setter Property="HorizontalOptions" Value="Center" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="Padding" Value="5" />
    </Style>

    <!--  Create a Style for a Label Frame  -->
    <Style
        x:Key="SSFrameHeaderStyle"
        BasedOn="{StaticResource SSFrameCardStyle}"
        TargetType="Frame">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Dark={StaticResource SecondaryContainerDark}, Light={StaticResource SecondaryContainerLight}}" />
        <Setter Property="BorderColor" Value="{AppThemeBinding Dark={StaticResource SecondaryDark}, Light={StaticResource SecondaryLight}}" />
        <Setter Property="HorizontalOptions" Value="Start" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="Padding" Value="2" />
    </Style>

    <!--  Create a Style for a Label Frame Background  -->
    <Style
        x:Key="SSFrameHeaderControlStyle"
        BasedOn="{StaticResource SSFrameCardStyle}"
        TargetType="Frame">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Dark={StaticResource Neutral}, Light={StaticResource Neutral}}" />
        <Setter Property="BorderColor" Value="{AppThemeBinding Dark={StaticResource OnSurfaceDark}, Light={StaticResource OnSurfaceLight}}" />
        <Setter Property="Margin" Value="1" />
        <Setter Property="HasShadow" Value="False" />
        <Setter Property="Padding" Value="3,3,3,3" />
        <Setter Property="HorizontalOptions" Value="FillAndExpand" />
        <Setter Property="CornerRadius" Value="3" />
    </Style>

    <!--  Create a Style for a Label Frame  -->
    <Style
        x:Key="SSFrameHeaderInsideControlStyle"
        BasedOn="{StaticResource SSFrameCardStyle}"
        TargetType="Frame">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Dark={StaticResource SurfaceVariantDark}, Light={StaticResource SurfaceVariantLight}}" />
        <Setter Property="BorderColor" Value="{AppThemeBinding Dark={StaticResource OnSurfaceLight}, Light={StaticResource OnSurfaceLight}}" />
        <Setter Property="Margin" Value="1" />
        <Setter Property="HasShadow" Value="False" />
        <Setter Property="Padding" Value="3,3,3,3" />
        <Setter Property="HorizontalOptions" Value="FillAndExpand" />
        <Setter Property="CornerRadius" Value="3" />
    </Style>

    <!--
        Create Large Frame Styles
    -->

    <Style
        x:Key="SSFrameCardLargeStyle"
        BasedOn="{StaticResource SSFrameCardStyle}"
        TargetType="Frame">
        <Setter Property="WidthRequest" Value="{Binding CardLargeWidth, Source={x:Static sharedsharp:SharedSharpCardSizes.Current}, Mode=OneWay}" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="Margin" Value="3" />
    </Style>

    <Style
        x:Key="SSFrameLargeFixedCardStyle"
        BasedOn="{StaticResource SSFrameCardLargeStyle}"
        TargetType="Frame">
        <Setter Property="Padding" Value="0" />
        <Setter Property="HeightRequest" Value="{Binding CardLargeHeight, Source={x:Static sharedsharp:SharedSharpCardSizes.Current}, Mode=OneWay}" />
    </Style>

    <Style
        x:Key="SSFrameCardLargeFixedNSStyle"
        BasedOn="{StaticResource SSFrameLargeFixedCardStyle}"
        TargetType="Frame">
        <Setter Property="BorderColor" Value="{AppThemeBinding Dark={StaticResource SecondaryDark}, Light={StaticResource SecondaryLight}}" />
    </Style>

    <!--  Create a Variable Height Large Card Style  -->
    <Style
        x:Key="SSFrameLargeVariableCardStyle"
        BasedOn="{StaticResource SSFrameCardLargeStyle}"
        TargetType="Frame">
        <Setter Property="MinimumHeightRequest" Value="{Binding CardLargeHeight, Source={x:Static sharedsharp:SharedSharpCardSizes.Current}, Mode=OneWay}" />
    </Style>

    <!--  Create a Variable Height Large Card Style - Not Selectable  -->
    <Style
        x:Key="SSFrameLargeVariableCardStyleNS"
        BasedOn="{StaticResource SSFrameLargeVariableCardStyle}"
        TargetType="Frame">
        <Setter Property="BorderColor" Value="Transparent" />
        <Setter Property="WidthRequest" Value="{Binding CardLargeWidth, Source={x:Static sharedsharp:SharedSharpCardSizes.Current}, Mode=OneWay}" />
    </Style>

    <!--
        ******************************************************
        Grid Styles
        ******************************************************
    -->

    <!--  Create a Base Style for a Grid Style  -->
    <Style x:Key="SSGridBaseStyle" TargetType="Grid">
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="1" />
    </Style>

    <Style
        x:Key="SSGridLargeVariableCardStyle"
        BasedOn="{StaticResource SSGridBaseStyle}"
        TargetType="Grid" />

    <Style
        x:Key="SSGridHeaderControlStyle"
        BasedOn="{StaticResource SSGridBaseStyle}"
        TargetType="Grid">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Dark={StaticResource SurfaceVariantDark}, Light={StaticResource SurfaceVariantLight}}" />
    </Style>

    <!--
        ******************************************************
        Label Styles
        ******************************************************
    -->

    <!--  Create a Base Style for a Label  -->
    <Style x:Key="SSCardLabelStyle" TargetType="Label">
        <Setter Property="IsEnabled" Value="False" />
        <Setter Property="HorizontalOptions" Value="StartAndExpand" />
        <Setter Property="HorizontalTextAlignment" Value="Start" />
        <Setter Property="LineBreakMode" Value="WordWrap" />
        <Setter Property="VerticalOptions" Value="StartAndExpand" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="FontSize" Value="{x:Static sharedsharp:SharedSharpFontSize.FontMedium}" />
        <Setter Property="TextColor" Value="{AppThemeBinding Dark={StaticResource OnSurfaceDark}, Light={StaticResource OnSurfaceLight}}" />
    </Style>

    <!--  Create Very Small Styles for a Label  -->
    <Style
        x:Key="SSCardLabelStyleVerySmall"
        BasedOn="{StaticResource SSCardLabelStyle}"
        TargetType="Label">
        <Setter Property="Margin" Value="0,0,1,1" />
        <Setter Property="FontSize" Value="{x:Static sharedsharp:SharedSharpFontSize.FontVerySmall}" />
    </Style>

    <!--  Create Small Styles for a Label  -->
    <Style
        x:Key="SSCardLabelStyleSmall"
        BasedOn="{StaticResource SSCardLabelStyle}"
        TargetType="Label">
        <Setter Property="Margin" Value="0,0,3,3" />
        <Setter Property="FontSize" Value="{x:Static sharedsharp:SharedSharpFontSize.FontSmall}" />
    </Style>

    <Style
        x:Key="SSHeaderStyleSmall"
        BasedOn="{StaticResource SSCardLabelStyle}"
        TargetType="Label">
        <Setter Property="Margin" Value="3" />
        <Setter Property="FontSize" Value="{x:Static sharedsharp:SharedSharpFontSize.FontSmall}" />
    </Style>

    <!--  Create Medium Styles for a Label  -->
    <Style
        x:Key="SSLabelStyleMedium"
        BasedOn="{StaticResource SSCardLabelStyle}"
        TargetType="Label">
        <Setter Property="Margin" Value="0,0,3,3" />
        <Setter Property="FontSize" Value="{x:Static sharedsharp:SharedSharpFontSize.FontMedium}" />
    </Style>

    <Style
        x:Key="SSHeaderStyleMedium"
        BasedOn="{StaticResource SSCardLabelStyle}"
        TargetType="Label">
        <Setter Property="Margin" Value="3" />
        <Setter Property="FontSize" Value="{x:Static sharedsharp:SharedSharpFontSize.FontMedium}" />
    </Style>

    <!--  Create Large Styles for a Label  -->
    <Style
        x:Key="SSLabelStyleLarge"
        BasedOn="{StaticResource SSCardLabelStyle}"
        TargetType="Label">
        <Setter Property="FontSize" Value="{x:Static sharedsharp:SharedSharpFontSize.FontLarge}" />
        <Setter Property="MaxLines" Value="4" />
    </Style>

    <Style
        x:Key="SSHeaderStyleLarge"
        BasedOn="{StaticResource SSCardLabelStyle}"
        TargetType="Label">
        <Setter Property="Margin" Value="3" />
        <Setter Property="FontSize" Value="{x:Static sharedsharp:SharedSharpFontSize.FontLarge}" />
    </Style>

    <!--  Create a Instructions Style for a Label  -->
    <Style
        x:Key="SSLabelStyleInstructions"
        BasedOn="{StaticResource SSCardLabelStyle}"
        TargetType="Label">
        <Setter Property="FontSize" Value="{x:Static sharedsharp:SharedSharpFontSize.FontMedium}" />
        <Setter Property="HorizontalOptions" Value="CenterAndExpand" />
        <Setter Property="TextColor" Value="{AppThemeBinding Dark={StaticResource OnSurfaceDark}, Light={StaticResource OnSurfaceLight}}" />
        <Setter Property="HorizontalTextAlignment" Value="Center" />
    </Style>

    <!--  Create a PageHeader Title Style for a Label  -->
    <Style
        x:Key="SSLabelPageHeaderTitleStyle"
        BasedOn="{StaticResource SSCardLabelStyle}"
        TargetType="Label">
        <Setter Property="LineBreakMode" Value="TailTruncation" />
        <Setter Property="FontSize" Value="{x:Static sharedsharp:SharedSharpFontSize.FontLarge}" />
        <Setter Property="VerticalTextAlignment" Value="Center" />
        <Setter Property="VerticalOptions" Value="CenterAndExpand" />
        <Setter Property="TextColor" Value="{AppThemeBinding Dark={StaticResource OnSurfaceDark}, Light={StaticResource OnSurfaceLight}}" />
    </Style>

    <!--
        ******************************************************
        Switch Styles
        ******************************************************
    -->

    <Style x:Key="SSSwitchStyle" TargetType="Switch">
        <Setter Property="HorizontalOptions" Value="End" />
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Dark={StaticResource SecondaryDark}, Light={StaticResource SecondaryLight}}" />
        <Setter Property="ThumbColor" Value="{AppThemeBinding Dark={StaticResource OnSecondaryDark}, Light={StaticResource OnSecondaryLight}}" />
    </Style>
</ResourceDictionary>