<ResourceDictionary
    x:Class="GrampsView.Assets.Styles.AppViewDictionary"
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:breadcrumb="clr-namespace:Breadcrumb;assembly=Breadcrumb"
    xmlns:common="clr-namespace:GrampsView.Common"
    xmlns:sharedsharp="clr-namespace:SharedSharp.CommonRoutines;assembly=SharedSharpNu">

    <ResourceDictionary.MergedDictionaries>

        <!--  Default dictionarys  -->

        <ResourceDictionary Source="AppThemeDictionary.xaml" />

        <ResourceDictionary Source="CommonDictionary.xaml" />

        <ResourceDictionary Source="_Thickness.xaml" />

        <ResourceDictionary Source="_Sizes.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--
        ******************************************************
        BreadCrumb Styles
        ******************************************************
    -->
    <Style
        x:Key="GVBreadcrumb"
        TargetType="breadcrumb:Breadcrumb">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Dark={StaticResource SurfaceDark}, Light={StaticResource SurfaceLight}}" />
        <Setter Property="LastBreadcrumbTextColor" Value="{AppThemeBinding Dark={StaticResource OnPrimaryContainerDark}, Light={StaticResource OnPrimaryContainerLight}}" />
        <Setter Property="TextColor" Value="{AppThemeBinding Dark={StaticResource OnSecondaryContainerDark}, Light={StaticResource OnSecondaryContainerLight}}" />
    </Style>

    <!--
        ******************************************************
        CollectionView Styles
        ******************************************************
    -->
    <Style
        x:Key="CollectionViewBase"
        TargetType="CollectionView">
        <Setter Property="Margin" Value="1" />
        <Setter Property="BackgroundColor" Value="Transparent" />
    </Style>

    <!--
        ******************************************************
        Entry Styles
        ******************************************************
    -->

    <!--  Create a Entry style  -->
    <Style
        x:Key="GVEntryBase"
        TargetType="Entry">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Dark={StaticResource OnPrimaryContainerDark}, Light={StaticResource OnPrimaryContainerLight}}" />
    </Style>

    <Style
        x:Key="GVEntryInvalid"
        TargetType="Entry">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Dark={StaticResource ErrorDark}, Light={StaticResource ErrorLight}}" />
    </Style>

    <!--
        ******************************************************
        FlexLayout Styles
        ******************************************************
    -->

    <!--  Create a Card Style for a FlexLayout Style  -->
    <Style
        x:Key="FlexLayoutCards"
        TargetType="FlexLayout">
        <Setter Property="Wrap" Value="Wrap" />
        <Setter Property="AlignItems" Value="Start" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="AlignContent" Value="Start" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
    </Style>

    <Style
        x:Key="FlexSingleCollection"
        TargetType="FlexLayout">
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Wrap" Value="Wrap" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Dark={StaticResource BackgroundDark}, Light={StaticResource BackgroundLight}}" />
    </Style>

    <Style
        x:Key="FlexMulti"
        TargetType="FlexLayout">
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Dark={StaticResource BackgroundDark}, Light={StaticResource BackgroundLight}}" />
        <Setter Property="AlignItems" Value="Stretch" />
        <Setter Property="Wrap" Value="Wrap" />
    </Style>

    <!--
        ******************************************************
        Frame Styles
        ******************************************************
    -->

    <!--  Create a TopMenu Style  -->
    <Style
        x:Key="TopMenu"
        TargetType="Frame">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Dark={StaticResource SurfaceDark}, Light={StaticResource SurfaceLight}}" />
        <Setter Property="HasShadow" Value="False" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="MinimumWidthRequest" Value="40" />
        <Setter Property="HorizontalOptions" Value="EndAndExpand" />
        <Setter Property="CornerRadius" Value="0" />
    </Style>

    <!--  Create a PageMenu Style  -->
    <Style
        x:Key="GVPageMenu"
        TargetType="Frame">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Dark={StaticResource SurfaceDark}, Light={StaticResource SurfaceLight}}" />
        <Setter Property="BorderColor" Value="{AppThemeBinding Dark={StaticResource SecondaryContainerDark}, Light={StaticResource SecondaryContainerLight}}" />
        <Setter Property="CornerRadius" Value="3" />
        <Setter Property="HasShadow" Value="False" />
        <Setter Property="HorizontalOptions" Value="Fill" />
        <Setter Property="Margin" Value="3" />
        <Setter Property="Padding" Value="3" />
    </Style>

    <!--  Create a MediaImage Style  -->
    <Style
        x:Key="MediaImageStyle"
        TargetType="Grid">
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="1" />
    </Style>

    <!--
        ******************************************************
        Frame Card Styles
        ******************************************************
    -->

    <!--
        Create a Frame Card Style
    -->
    <Style
        x:Key="FrameCardStyle"
        TargetType="Frame">
        <Setter Property="HorizontalOptions" Value="Center" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Dark={StaticResource SurfaceDark}, Light={StaticResource SurfaceLight}}" />
        <Setter Property="Margin" Value="10" />
        <Setter Property="CornerRadius" Value="3" />
        <Setter Property="BorderColor" Value="{AppThemeBinding Dark={StaticResource SecondaryContainerDark}, Light={StaticResource SecondaryContainerLight}}" />
        <Setter Property="HasShadow" Value="True" />
    </Style>

    <!--
        Create Single Line Card Styles
    -->
    <Style
        x:Key="FrameCardSingleStyle"
        BasedOn="{StaticResource FrameCardStyle}"
        TargetType="Frame">
        <Setter Property="Padding" Value="3" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="CornerRadius" Value="3" />
    </Style>

    <Style
        x:Key="FrameSingleFixedCardStyle"
        BasedOn="{StaticResource FrameCardSingleStyle}"
        TargetType="Frame">
        <Setter Property="Padding" Value="0" />
        <Setter Property="HeightRequest" Value="{Binding CardSingleHeight, Source={x:Static common:CardSizes.Current}, Mode=OneWay}" />
        <Setter Property="WidthRequest" Value="{Binding CardSmallWidth, Source={x:Static common:CardSizes.Current}, Mode=OneWay}" />
    </Style>

    <Style
        x:Key="FrameSingleFixedCardStyleNS"
        BasedOn="{StaticResource FrameSingleFixedCardStyle}"
        TargetType="Frame">
        <Setter Property="BorderColor" Value="Transparent" />
    </Style>

    <!--
        Create Small Card Styles
    -->
    <Style
        x:Key="FrameCardSmallStyle"
        BasedOn="{StaticResource FrameCardStyle}"
        TargetType="Frame">
        <Setter Property="WidthRequest" Value="{Binding CardSmallWidth, Source={x:Static common:CardSizes.Current}, Mode=OneWay}" />
        <Setter Property="Margin" Value="2" />
    </Style>

    <Style
        x:Key="FrameSmallFixedCardStyle"
        BasedOn="{StaticResource FrameCardSmallStyle}"
        TargetType="Frame">
        <Setter Property="HeightRequest" Value="{Binding CardSmallHeight, Source={x:Static common:CardSizes.Current}, Mode=OneWay}" />
    </Style>

    <Style
        x:Key="FrameSmallFixedCardStyleNS"
        BasedOn="{StaticResource FrameSmallFixedCardStyle}"
        TargetType="Frame">
        <Setter Property="BorderColor" Value="Transparent" />
    </Style>

    <Style
        x:Key="FrameSmallVariableCardStyle"
        BasedOn="{StaticResource FrameCardSmallStyle}"
        TargetType="Frame" />

    <Style
        x:Key="FrameSmallVariableCardStyleNS"
        BasedOn="{StaticResource FrameSmallVariableCardStyle}"
        TargetType="Frame">
        <Setter Property="BorderColor" Value="Transparent" />
    </Style>

    <!--
        Create Medium Card Styles
    -->

    <Style
        x:Key="FrameCardMediumStyle"
        BasedOn="{StaticResource FrameCardStyle}"
        TargetType="Frame">
        <Setter Property="WidthRequest" Value="{Binding CardMediumWidth, Source={x:Static common:CardSizes.Current}, Mode=OneWay}" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="Margin" Value="3" />
    </Style>

    <Style
        x:Key="FrameMediumFixedCardStyle"
        BasedOn="{StaticResource FrameCardMediumStyle}"
        TargetType="Frame">
        <Setter Property="HeightRequest" Value="{Binding CardMediumHeight, Source={x:Static common:CardSizes.Current}, Mode=OneWay}" />
    </Style>

    <Style
        x:Key="FrameMediumFixedCardStyleNS"
        BasedOn="{StaticResource FrameCardMediumStyle}"
        TargetType="Frame">
        <Setter Property="BorderColor" Value="Transparent" />
    </Style>

    <!--  Create a Variable Height Medium Card Style  -->
    <Style
        x:Key="FrameMediumVariableCardStyle"
        BasedOn="{StaticResource FrameCardMediumStyle}"
        TargetType="Frame">
        <Setter Property="MinimumHeightRequest" Value="{Binding CardMediumHeight, Source={x:Static common:CardSizes.Current}, Mode=OneWay}" />
    </Style>

    <!--  Create a Variable Height Medium Card Style - Not Selectable  -->
    <Style
        x:Key="FrameMediumVariableCardStyleNS"
        BasedOn="{StaticResource FrameMediumVariableCardStyle}"
        TargetType="Frame">
        <Setter Property="BorderColor" Value="Transparent" />
        <Setter Property="WidthRequest" Value="{Binding CardMediumWidth, Source={x:Static common:CardSizes.Current}, Mode=OneWay}" />
    </Style>

    <!--
        Create Large Card Styles
    -->

    <Style
        x:Key="FrameCardLargeStyle"
        BasedOn="{StaticResource FrameCardStyle}"
        TargetType="Frame">
        <Setter Property="WidthRequest" Value="{Binding CardLargeWidth, Source={x:Static common:CardSizes.Current}, Mode=OneWay}" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="Margin" Value="3" />
    </Style>

    <Style
        x:Key="FrameLargeFixedCardStyle"
        BasedOn="{StaticResource FrameCardLargeStyle}"
        TargetType="Frame">
        <Setter Property="Padding" Value="0" />
        <Setter Property="HeightRequest" Value="{Binding CardLargeHeight, Source={x:Static common:CardSizes.Current}, Mode=OneWay}" />
    </Style>

    <Style
        x:Key="FrameCardLargeFixedNSStyle"
        BasedOn="{StaticResource FrameLargeFixedCardStyle}"
        TargetType="Frame">
        <Setter Property="BorderColor" Value="{AppThemeBinding Dark={StaticResource SecondaryDark}, Light={StaticResource SecondaryLight}}" />
    </Style>

    <!--  Create a Variable Height Large Card Style  -->
    <Style
        x:Key="FrameLargeVariableCardStyle"
        BasedOn="{StaticResource FrameCardLargeStyle}"
        TargetType="Frame">
        <Setter Property="MinimumHeightRequest" Value="{Binding CardLargeHeight, Source={x:Static common:CardSizes.Current}, Mode=OneWay}" />
    </Style>

    <!--  Create a Variable Height Large Card Style - Not Selectable  -->
    <Style
        x:Key="FrameLargeVariableCardStyleNS"
        BasedOn="{StaticResource FrameLargeVariableCardStyle}"
        TargetType="Frame">
        <Setter Property="BorderColor" Value="Transparent" />
        <Setter Property="WidthRequest" Value="{Binding CardLargeWidth, Source={x:Static common:CardSizes.Current}, Mode=OneWay}" />
    </Style>

    <!--  Card Special Cards  -->

    <Style
        x:Key="CardImageBackgroundFrame"
        BasedOn="{StaticResource FrameCardStyle}"
        TargetType="Frame">
        <Setter Property="HorizontalOptions" Value="FillAndExpand" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="HasShadow" Value="false" />
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Dark={StaticResource SecondaryContainerDark}, Light={StaticResource SecondaryContainerLight}}" />
    </Style>

    <Style
        x:Key="CardGroupStyle"
        TargetType="Frame">
        <Setter Property="HasShadow" Value="False" />
        <Setter Property="Margin" Value="3" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="BorderColor" Value="{AppThemeBinding Dark={StaticResource SurfaceDark}, Light={StaticResource SurfaceLight}}" />
        <Setter Property="CornerRadius" Value="3" />
    </Style>

    <Style
        x:Key="FlexMultiCollection"
        TargetType="Frame">
        <Setter Property="HasShadow" Value="False" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="CornerRadius" Value="3" />
    </Style>

    <Style
        x:Key="NoteFullTextStyle"
        BasedOn="{StaticResource FrameLargeVariableCardStyleNS}"
        TargetType="Frame">
        <Setter Property="BackgroundColor" Value="{DynamicResource CardBackGroundNote}" />
        <Setter Property="WidthRequest" Value="{Binding CardLargeDoubleWidth, Source={x:Static common:CardSizes.Current}, Mode=OneWay}" />
        <Setter Property="BorderColor" Value="{AppThemeBinding Dark={StaticResource PrimaryDark}, Light={StaticResource PrimaryLight}}" />
    </Style>

    <Style
        x:Key="MediaImageFull"
        BasedOn="{StaticResource FrameCardLargeStyle}"
        TargetType="Frame">
        <Setter Property="WidthRequest" Value="{Binding CardLargeWidth, Source={x:Static common:CardSizes.Current}, Mode=OneWay}" />
        <Setter Property="HeightRequest" Value="{Binding CardLargeWidth, Source={x:Static common:CardSizes.Current}, Mode=OneWay}" />
        <Setter Property="CornerRadius" Value="0" />
    </Style>

    <!--  Create a Style for a Text Block Header  -->
    <Style
        x:Key="GVFrameHeaderStyle"
        BasedOn="{StaticResource FrameCardStyle}"
        TargetType="Frame">
        <Setter Property="HasShadow" Value="False" />
        <Setter Property="HorizontalOptions" Value="FillAndExpand" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderColor" Value="{AppThemeBinding Dark={StaticResource PrimaryContainerDark}, Light={StaticResource PrimaryContainerLight}}" />
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Dark={StaticResource PrimaryContainerDark}, Light={StaticResource PrimaryContainerLight}}" />
    </Style>

    <!--
        ******************************************************
        Grid Styles
        ******************************************************
    -->

    <!--  Create a Base Style for a Grid Style  -->
    <Style
        x:Key="GridBaseStyle"
        TargetType="Grid">
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="1" />
    </Style>

    <Style
        x:Key="CardImageBackground"
        BasedOn="{StaticResource GridBaseStyle}"
        TargetType="Grid">
        <Setter Property="Margin" Value="0" />
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Dark={StaticResource SecondaryContainerDark}, Light={StaticResource SecondaryContainerLight}}" />
    </Style>

    <Style
        x:Key="GVPageTitleStyle"
        TargetType="Grid">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Dark={StaticResource SurfaceVariantDark}, Light={StaticResource SurfaceVariantLight}}" />
    </Style>

    <!--  Grid Single  -->
    <Style
        x:Key="GridSingleFixedCardStyle"
        BasedOn="{StaticResource GridBaseStyle}"
        TargetType="Grid">
        <Setter Property="HeightRequest" Value="{Binding CardSingleHeight, Source={x:Static common:CardSizes.Current}, Mode=OneWay}" />
    </Style>

    <!--  Grid Small  -->
    <Style
        x:Key="GridSmallFixedCardStyle"
        BasedOn="{StaticResource GridBaseStyle}"
        TargetType="Grid">
        <Setter Property="HeightRequest" Value="{Binding CardSmallHeight, Source={x:Static common:CardSizes.Current}, Mode=OneWay}" />
    </Style>

    <Style
        x:Key="GridSmallVariableCardStyle"
        BasedOn="{StaticResource GridBaseStyle}"
        TargetType="Grid" />

    <!--  Grid Medium  -->
    <Style
        x:Key="GridMediumFixedCardStyle"
        BasedOn="{StaticResource GridBaseStyle}"
        TargetType="Grid">
        <!--<Setter Property="HeightRequest" Value="{Binding CardMediumHeight, Source={x:Static common:CardSizes.Current}, Mode=OneWay}" />-->
    </Style>

    <!--  Grid Large  -->
    <Style
        x:Key="GridLargeFixedCardStyle"
        BasedOn="{StaticResource GridBaseStyle}"
        TargetType="Grid">
        <!--<Setter Property="HeightRequest" Value="{Binding CardLargeHeight, Source={x:Static common:CardSizes.Current}, Mode=OneWay}" />-->
    </Style>

    <Style
        x:Key="GridLargeVariableCardStyle"
        BasedOn="{StaticResource GridBaseStyle}"
        TargetType="Grid" />

    <!--
        ******************************************************
        Image  Styles
        ******************************************************
    -->

    <Style
        x:Key="GVSymbolIconBaseType"
        TargetType="Image">
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="IsEnabled" Value="False" />
    </Style>

    <Style
        x:Key="GVSymbolIconSingleCardType"
        BasedOn="{StaticResource GVSymbolIconBaseType}"
        TargetType="Image">
        <Setter Property="HeightRequest" Value="15" />
        <Setter Property="WidthRequest" Value="15" />
        <Setter Property="VerticalOptions" Value="End" />
        <Setter Property="HorizontalOptions" Value="End" />
        <Setter Property="Margin" Value="0,0,3,3" />
    </Style>

    <Style
        x:Key="GVSymbolIconSmallCardType"
        BasedOn="{StaticResource GVSymbolIconBaseType}"
        TargetType="Image">
        <Setter Property="HeightRequest" Value="20" />
        <Setter Property="WidthRequest" Value="20" />
        <Setter Property="VerticalOptions" Value="End" />
        <Setter Property="HorizontalOptions" Value="End" />
        <Setter Property="Margin" Value="0,0,3,3" />
    </Style>

    <Style
        x:Key="GVSymbolIconLargeCardType"
        BasedOn="{StaticResource GVSymbolIconBaseType}"
        TargetType="Image">
        <Setter Property="HeightRequest" Value="30" />
        <Setter Property="WidthRequest" Value="30" />
        <Setter Property="VerticalOptions" Value="End" />
        <Setter Property="HorizontalOptions" Value="End" />
        <Setter Property="Margin" Value="0,0,3,3" />
    </Style>

    <Style
        x:Key="GVSymbolconPageHeaderType"
        BasedOn="{StaticResource GVSymbolIconBaseType}"
        TargetType="Image">
        <Setter Property="VerticalOptions" Value="CenterAndExpand" />
        <Setter Property="Margin" Value="3" />
    </Style>

    <Style
        x:Key="GVSymbolcon"
        BasedOn="{StaticResource GVSymbolIconBaseType}"
        TargetType="Image">
        <Setter Property="VerticalOptions" Value="CenterAndExpand" />
    </Style>

    <!--
        ******************************************************
        Image Control Styles
        ******************************************************
    -->

    <!--  Create a Material Font Style Button Style  -->
    <Style
        x:Key="GVImageButton"
        TargetType="ImageButton">
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="CornerRadius" Value="2" />
        <Setter Property="Aspect" Value="AspectFit" />
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Dark={StaticResource OnSecondaryContainerDark}, Light={StaticResource OnSecondaryLight}}" />
    </Style>

    <!--
        ******************************************************
        Label Styles
        ******************************************************
    -->

    <!--  Create a Base Style for a Label  -->
    <Style
        x:Key="GVCardLabelStyle"
        TargetType="Label">
        <Setter Property="IsEnabled" Value="False" />
        <Setter Property="HorizontalOptions" Value="StartAndExpand" />
        <Setter Property="HorizontalTextAlignment" Value="Start" />
        <Setter Property="LineBreakMode" Value="WordWrap" />
        <Setter Property="VerticalOptions" Value="StartAndExpand" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="FontSize" Value="{x:Static sharedsharp:FontSizes.FontMedium}" />
        <Setter Property="TextColor" Value="{AppThemeBinding Dark={StaticResource OnSurfaceDark}, Light={StaticResource OnSurfaceLight}}" />
    </Style>

    <!--  Create Very Small Styles for a Label  -->
    <Style
        x:Key="GVCardLabelStyleVerySmall"
        BasedOn="{StaticResource GVCardLabelStyle}"
        TargetType="Label">
        <Setter Property="Margin" Value="0,0,1,1" />
        <Setter Property="FontSize" Value="{x:Static sharedsharp:FontSizes.FontVerySmall}" />
    </Style>

    <!--  Create Small Styles for a Label  -->
    <Style
        x:Key="GVCardLabelStyleSmall"
        BasedOn="{StaticResource GVCardLabelStyle}"
        TargetType="Label">
        <Setter Property="Margin" Value="0,0,3,3" />
        <Setter Property="FontSize" Value="{x:Static sharedsharp:FontSizes.FontSmall}" />
    </Style>

    <Style
        x:Key="GVHeaderStyleSmall"
        BasedOn="{StaticResource GVCardLabelStyle}"
        TargetType="Label">
        <Setter Property="Margin" Value="3" />
        <Setter Property="FontSize" Value="{x:Static sharedsharp:FontSizes.FontSmall}" />
    </Style>

    <!--  Create Medium Styles for a Label  -->
    <Style
        x:Key="GVCardLabelStyleMedium"
        BasedOn="{StaticResource GVCardLabelStyle}"
        TargetType="Label">
        <Setter Property="Margin" Value="0,0,3,3" />
        <Setter Property="FontSize" Value="{x:Static sharedsharp:FontSizes.FontMedium}" />
    </Style>

    <Style
        x:Key="GVHeaderStyleMedium"
        BasedOn="{StaticResource GVCardLabelStyle}"
        TargetType="Label">
        <Setter Property="Margin" Value="3" />
        <Setter Property="FontSize" Value="{x:Static sharedsharp:FontSizes.FontMedium}" />
    </Style>

    <!--  Create Large Styles for a Label  -->
    <Style
        x:Key="GVLabelStyleLarge"
        BasedOn="{StaticResource GVCardLabelStyle}"
        TargetType="Label">
        <Setter Property="FontSize" Value="{x:Static sharedsharp:FontSizes.FontLarge}" />
        <Setter Property="MaxLines" Value="4" />
    </Style>

    <Style
        x:Key="GVHeaderStyleLarge"
        BasedOn="{StaticResource GVLabelStyleLarge}"
        TargetType="Label">
        <Setter Property="Margin" Value="3" />
        <Setter Property="FontSize" Value="{x:Static sharedsharp:FontSizes.FontLarge}" />
    </Style>

    <Style
        x:Key="GVLabelStyleNoteFull"
        BasedOn="{StaticResource GVCardLabelStyle}"
        TargetType="Label">
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="TextColor" Value="{AppThemeBinding Dark={StaticResource OnSecondaryContainerDark}, Light={StaticResource OnSecondaryLight}}" />
        <Setter Property="FontSize" Value="{x:Static sharedsharp:FontSizes.FontMedium}" />
    </Style>

    <!--  Create a Instructions Style for a Label  -->
    <Style
        x:Key="GVLabelStyleInstructions"
        BasedOn="{StaticResource GVCardLabelStyle}"
        TargetType="Label">
        <Setter Property="FontSize" Value="{x:Static sharedsharp:FontSizes.FontMedium}" />
        <Setter Property="HorizontalOptions" Value="CenterAndExpand" />
        <Setter Property="TextColor" Value="{AppThemeBinding Dark={StaticResource OnSurfaceDark}, Light={StaticResource OnSurfaceLight}}" />
        <Setter Property="HorizontalTextAlignment" Value="Center" />
    </Style>

    <!--  Create a PageHeader Title Style for a Label  -->
    <Style
        x:Key="GVLabelPageHeaderTitleStyle"
        BasedOn="{StaticResource GVCardLabelStyle}"
        TargetType="Label">
        <Setter Property="LineBreakMode" Value="TailTruncation" />
        <Setter Property="FontSize" Value="{x:Static sharedsharp:FontSizes.FontLarge}" />
        <Setter Property="VerticalTextAlignment" Value="Center" />
        <Setter Property="VerticalOptions" Value="CenterAndExpand" />
        <Setter Property="TextColor" Value="{AppThemeBinding Dark={StaticResource OnSurfaceDark}, Light={StaticResource OnSurfaceLight}}" />
    </Style>

    <!--
        ******************************************************
        Switch Styles
        ******************************************************
    -->

    <!--  Create a Base Style for a Switches  -->
    <Style
        x:Key="GVSwitchStyle"
        TargetType="Switch">
        <!--<Setter Property="BackgroundColor" Value="{AppThemeBinding Dark={StaticResource SecondaryDark}, Light={StaticResource SecondaryLight}}" />-->
        <Setter Property="HorizontalOptions" Value="EndAndExpand" />
    </Style>
</ResourceDictionary>