<ResourceDictionary
    x:Class="GrampsView.Resources.Styles.AppViewDictionary"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:breadcrumb="clr-namespace:Breadcrumb;assembly=Breadcrumb"
    xmlns:ssharp="clr-namespace:SharedSharp.Resources.Styles;assembly=SharedSharp"
    xmlns:sSharpCommon="clr-namespace:SharedSharp.Common;assembly=SharedSharp"
    xmlns:Common="clr-namespace:GrampsView.Common">

    <ResourceDictionary.MergedDictionaries>

        <!--  Default dictionarys  -->

        <ssharp:AppThemeDictionary />
        <ssharp:CommonDictionary />

        <ResourceDictionary Source="CardThemeDictionary.xaml" />

        <ResourceDictionary Source="_Thickness.xaml" />

        <ResourceDictionary Source="_Sizes.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--
        ******************************************************
        BreadCrumb Styles
        ******************************************************
    -->
    <Style x:Key="GVBreadcrumb" TargetType="breadcrumb:Breadcrumb">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Dark={StaticResource SurfaceDark}, Light={StaticResource SurfaceLight}}" />
        <Setter Property="LastBreadcrumbTextColor" Value="{AppThemeBinding Dark={StaticResource OnPrimaryContainerDark}, Light={StaticResource OnPrimaryContainerLight}}" />
        <Setter Property="TextColor" Value="{AppThemeBinding Dark={StaticResource OnSecondaryContainerDark}, Light={StaticResource OnSecondaryContainerLight}}" />
    </Style>

    <!--
        ******************************************************
        Entry Styles
        ******************************************************
    -->

    <!--  Create a Entry style  -->
    <Style x:Key="GVEntryBase" TargetType="Entry">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Dark={StaticResource OnPrimaryContainerDark}, Light={StaticResource OnPrimaryContainerLight}}" />
    </Style>

    <Style x:Key="GVEntryInvalid" TargetType="Entry">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Dark={StaticResource ErrorDark}, Light={StaticResource ErrorLight}}" />
    </Style>

    <!--
        ******************************************************
        FlexLayout Styles
        ******************************************************
    -->

    <!--  Create a Card Style for a FlexLayout Style  -->
    <Style x:Key="FlexLayoutCards" TargetType="FlexLayout">
        <Setter Property="AlignContent" Value="Start" />
        <Setter Property="AlignItems" Value="Start" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Wrap" Value="Wrap" />
    </Style>

    <Style x:Key="FlexSingleCollection" TargetType="FlexLayout">
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Wrap" Value="Wrap" />
    </Style>

    <Style x:Key="FlexMulti" TargetType="FlexLayout">
        <Setter Property="AlignItems" Value="Stretch" />
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Dark={StaticResource BackgroundDark}, Light={StaticResource BackgroundLight}}" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Wrap" Value="Wrap" />
    </Style>

    <!--  Create a MediaImage Style  -->
    <Style x:Key="MediaImageStyle" TargetType="Grid">
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="1" />
    </Style>

    <!--
        ******************************************************
        Border Card Styles
        ******************************************************
    -->

    <!--  Card Special Cards  -->

    <Style
        x:Key="CardImageBackgroundFrame"
        BasedOn="{StaticResource SSBorderCardStyle}"
        TargetType="Border">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Dark={StaticResource SurfaceVariantDark}, Light={StaticResource SurfaceVariantLight}}" />
        <Setter Property="Stroke" Value="Transparent" />
        <Setter Property="HorizontalOptions" Value="FillAndExpand" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
    </Style>

    <Style x:Key="CardGroupStyle" TargetType="Border">
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="Stroke" Value="{AppThemeBinding Dark={StaticResource SurfaceDark}, Light={StaticResource SurfaceLight}}" />
        <Setter Property="Margin" Value="3" />
        <Setter Property="Padding" Value="0" />
    </Style>

    <Style x:Key="FlexMultiCollection" TargetType="Border">
        <Setter Property="BackgroundColor" Value="Transparent" />
        <!--<Setter Property="CornerRadius" Value="3" />-->
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
    </Style>

    <Style
        x:Key="NoteFullTextStyle"
        BasedOn="{StaticResource SSBorderLargeVariableCardStyleNS}"
        TargetType="Border">
        <Setter Property="WidthRequest" Value="{Binding CardLargeDoubleWidth, Source={x:Static Common:CommonStatic.CardSizes}, Mode=OneWay}" />
    </Style>

    <Style
        x:Key="MediaImageFull"
        BasedOn="{StaticResource SSBorderCardLargeStyle}"
        TargetType="Border">
        <!--<Setter Property="CornerRadius" Value="0" />-->
        <Setter Property="HeightRequest" Value="{Binding CardLargeHeight, Source={x:Static Common:CommonStatic.CardSizes}, Mode=OneWay}" />
        <Setter Property="WidthRequest" Value="{Binding CardLargeWidth, Source={x:Static Common:CommonStatic.CardSizes}, Mode=OneWay}" />
    </Style>

    <!--
        ******************************************************
        Grid Styles
        ******************************************************
    -->

    <Style
        x:Key="CardImageBackground"
        BasedOn="{StaticResource SSGridBaseStyle}"
        TargetType="Grid">
        <Setter Property="Margin" Value="0" />
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Dark={StaticResource SecondaryContainerDark}, Light={StaticResource SecondaryContainerLight}}" />
    </Style>

    <Style x:Key="GVPageTitleStyle" TargetType="Grid">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Dark={StaticResource SurfaceVariantDark}, Light={StaticResource SurfaceVariantLight}}" />
    </Style>

    <!--
        ******************************************************
        Image Styles
        ******************************************************
    -->

    <Style x:Key="GVSymbolIconBaseType" TargetType="Image">
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="IsEnabled" Value="False" />
    </Style>

    <Style
        x:Key="GVSymbolIconLinkCardType"
        BasedOn="{StaticResource GVSymbolIconBaseType}"
        TargetType="Image">
        <Setter Property="HeightRequest" Value="10" />
        <Setter Property="WidthRequest" Value="10" />
        <Setter Property="VerticalOptions" Value="End" />
        <Setter Property="HorizontalOptions" Value="End" />
        <Setter Property="Margin" Value="0,0,1,1" />
    </Style>

    <Style
        x:Key="GVSymbolIconSingleCardType"
        BasedOn="{StaticResource GVSymbolIconBaseType}"
        TargetType="Image">
        <Setter Property="HeightRequest" Value="15" />
        <Setter Property="WidthRequest" Value="15" />
        <Setter Property="VerticalOptions" Value="End" />
        <Setter Property="HorizontalOptions" Value="End" />
        <Setter Property="Margin" Value="0,0,3,3" />
    </Style>

    <Style
        x:Key="GVSymbolIconSmallCardType"
        BasedOn="{StaticResource GVSymbolIconBaseType}"
        TargetType="Image">
        <Setter Property="HeightRequest" Value="20" />
        <Setter Property="WidthRequest" Value="20" />
        <Setter Property="VerticalOptions" Value="End" />
        <Setter Property="HorizontalOptions" Value="End" />
        <Setter Property="Margin" Value="0,0,3,3" />
    </Style>

    <Style
        x:Key="GVSymbolIconLargeCardType"
        BasedOn="{StaticResource GVSymbolIconBaseType}"
        TargetType="Image">
        <Setter Property="HeightRequest" Value="30" />
        <Setter Property="WidthRequest" Value="30" />
        <Setter Property="VerticalOptions" Value="End" />
        <Setter Property="HorizontalOptions" Value="End" />
        <Setter Property="Margin" Value="0,0,3,3" />
    </Style>

    <Style
        x:Key="GVSymbolconPageHeaderType"
        BasedOn="{StaticResource GVSymbolIconBaseType}"
        TargetType="Image">
        <Setter Property="VerticalOptions" Value="CenterAndExpand" />
        <Setter Property="Margin" Value="3" />
    </Style>

    <Style
        x:Key="GVSymbolcon"
        BasedOn="{StaticResource GVSymbolIconBaseType}"
        TargetType="Image">
        <Setter Property="VerticalOptions" Value="CenterAndExpand" />
    </Style>

    <!--
        ******************************************************
        Image Control Styles
        ******************************************************
    -->

    <!--  Create a Material Font Style Button Style  -->
    <Style x:Key="GVImageButton" TargetType="ImageButton">
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="CornerRadius" Value="2" />
        <Setter Property="Aspect" Value="AspectFit" />
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Dark={StaticResource OnSecondaryContainerDark}, Light={StaticResource OnSecondaryLight}}" />
    </Style>

    <!--
        ******************************************************
        Label Styles
        ******************************************************
    -->

    <!--  Create Medium Styles for a Label  -->
    <Style
        x:Key="GVHeaderStyleMedium"
        BasedOn="{StaticResource SSCardLabelStyle}"
        TargetType="Label">
        <Setter Property="Margin" Value="3" />
        <Setter Property="FontSize" Value="{x:Static sSharpCommon:SharedSharpFontSize.FontMedium}" />
    </Style>

    <!--  Create Large Styles for a Label  -->
    <Style
        x:Key="GVHeaderStyleLarge"
        BasedOn="{StaticResource SSLabelStyleLarge}"
        TargetType="Label">
        <Setter Property="Margin" Value="3" />
        <Setter Property="FontSize" Value="{x:Static sSharpCommon:SharedSharpFontSize.FontLarge}" />
    </Style>

    <!--  Create a Instructions Style for a Label  -->
    <Style
        x:Key="GVLabelStyleInstructions"
        BasedOn="{StaticResource SSCardLabelStyle}"
        TargetType="Label">
        <Setter Property="FontSize" Value="{x:Static sSharpCommon:SharedSharpFontSize.FontMedium}" />
        <Setter Property="HorizontalOptions" Value="CenterAndExpand" />
        <Setter Property="TextColor" Value="{AppThemeBinding Dark={StaticResource OnSurfaceDark}, Light={StaticResource OnSurfaceLight}}" />
        <Setter Property="HorizontalTextAlignment" Value="Center" />
    </Style>

    <!--  Create a PageHeader Title Style for a Label  -->
    <Style
        x:Key="GVLabelPageHeaderTitleStyle"
        BasedOn="{StaticResource SSCardLabelStyle}"
        TargetType="Label">
        <Setter Property="LineBreakMode" Value="TailTruncation" />
        <Setter Property="FontSize" Value="{x:Static sSharpCommon:SharedSharpFontSize.FontLarge}" />
        <Setter Property="VerticalTextAlignment" Value="Center" />
        <Setter Property="VerticalOptions" Value="CenterAndExpand" />
        <Setter Property="TextColor" Value="{AppThemeBinding Dark={StaticResource OnSurfaceDark}, Light={StaticResource OnSurfaceLight}}" />
    </Style>
</ResourceDictionary>