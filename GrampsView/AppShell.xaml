<?xml version="1.0" encoding="UTF-8" ?>
<Shell
    x:Class="GrampsView.AppShell"
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:common="clr-namespace:GrampsView.Common"
    xmlns:ucon="clr-namespace:GrampsView.UserControls"
    xmlns:views="clr-namespace:GrampsView.Views"
    Navigating="Shell_Navigating">

    <!--
        The overall app visual hierarchy is defined here, along with navigation.
        
        https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/
    -->

    <Shell.Resources>
        <ResourceDictionary>
            <Style x:Key="BaseStyle" TargetType="Element">
                <Setter Property="Shell.BackgroundColor" Value="{AppThemeBinding Dark={StaticResource PrimaryColorDark}, Light={StaticResource PrimaryColorLight}}" />
                <Setter Property="Shell.ForegroundColor" Value="White" />
                <Setter Property="Shell.TitleColor" Value="{AppThemeBinding Dark={StaticResource BackgroundColorDark}, Light={StaticResource BackgroundColorLight}}" />
                <Setter Property="Shell.DisabledColor" Value="#B4FFFFFF" />
                <Setter Property="Shell.UnselectedColor" Value="#95FFFFFF" />
                <Setter Property="Shell.TabBarBackgroundColor" Value="{AppThemeBinding Dark={StaticResource PrimaryColorDark}, Light={StaticResource PrimaryColorLight}}" />
                <Setter Property="Shell.TabBarForegroundColor" Value="Red" />
                <Setter Property="Shell.TabBarUnselectedColor" Value="#95FFFFFF" />
                <Setter Property="Shell.TabBarTitleColor" Value="Red" />
            </Style>
            <Style BasedOn="{StaticResource BaseStyle}" TargetType="TabBar" />
            <Style BasedOn="{StaticResource BaseStyle}" TargetType="FlyoutItem" />

            <!--
                Default Styles for all Flyout Items
                https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#flyoutitem-and-menuitem-style-classes
            -->
            <Style Class="FlyoutItemLabelStyle" TargetType="Label">
                <Setter Property="TextColor" Value="White" />
            </Style>

            <Style
                ApplyToDerivedTypes="True"
                Class="FlyoutItemLayoutStyle"
                TargetType="Layout">
                <Setter Property="BackgroundColor" Value="{AppThemeBinding Dark={StaticResource SecondaryColorDark}, Light={StaticResource SecondaryColorLight}}" />
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.FontSize" Value="{x:Static common:CommonFontSize.FontMedium}" />
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="{AppThemeBinding Dark={StaticResource SecondaryDarkColorDark}, Light={StaticResource SecondaryDarkColorLight}}" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Selected">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{AppThemeBinding Dark={StaticResource PrimaryColorDark}, Light={StaticResource PrimaryColorLight}}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>

            <!--
                Custom Style you can apply to any Flyout Item
            -->
            <Style
                ApplyToDerivedTypes="True"
                Class="MenuItemLayoutStyle"
                TargetType="Layout">
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="{AppThemeBinding Dark={StaticResource PrimaryColorDark}, Light={StaticResource PrimaryColorLight}}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Shell.Resources>


    <!--
        TabBar lets you define content that won't show up in a flyout menu. When this content is active
        the flyout menu won't be available. This is useful for creating areas of the application where
        you don't want users to be able to navigate away from. If you would like to navigate to this
        content you can do so by calling
    -->
    <!--<TabBar>

        <Tab Title="Search">
            <Tab.Icon>
                <FontImageSource FontFamily="{StaticResource GlyphFontFamily}" Glyph="{x:Static common:CommonConstants.IconEvents}" />
            </Tab.Icon>
            <ShellContent ContentTemplate="{DataTemplate views:SearchPage}" Route="SearchPage" />
        </Tab>
    </TabBar>-->

    <!--
        When the Flyout is visible this defines the content to display in the flyout.
        FlyoutDisplayOptions="AsMultipleItems" will create a separate flyout item for each child element
        https://docs.microsoft.com/dotnet/api/xamarin.forms.shellgroupitem.flyoutdisplayoptions?view=xamarin-forms
    -->

    <FlyoutItem Title="Hub">
        <FlyoutItem.FlyoutIcon>
            <FontImageSource FontFamily="{StaticResource GlyphFontFamily}" Glyph="{x:Static common:CommonConstants.IconHub}" />
        </FlyoutItem.FlyoutIcon>
        <ShellContent ContentTemplate="{DataTemplate views:HubPage}" Route="HubPage" />
    </FlyoutItem>

    <FlyoutItem Title="Birthdays">
        <FlyoutItem.FlyoutIcon>
            <FontImageSource FontFamily="{StaticResource GlyphFontFamily}" Glyph="{x:Static common:CommonConstants.IconPeopleBirthday}" />
        </FlyoutItem.FlyoutIcon>
        <ShellContent ContentTemplate="{DataTemplate views:PersonBirthdayPage}" Route="PersonBirthdayPage" />
    </FlyoutItem>

    <FlyoutItem Title="Bookmarks">
        <FlyoutItem.FlyoutIcon>
            <FontImageSource FontFamily="{StaticResource GlyphFontFamily}" Glyph="{x:Static common:CommonConstants.IconBookMark}" />
        </FlyoutItem.FlyoutIcon>
        <ShellContent ContentTemplate="{DataTemplate views:BookMarkListPage}" Route="BookMarkListPage" />
    </FlyoutItem>

    <FlyoutItem Title="Citations">
        <FlyoutItem.FlyoutIcon>
            <FontImageSource FontFamily="{StaticResource GlyphFontFamily}" Glyph="{x:Static common:CommonConstants.IconCitation}" />
        </FlyoutItem.FlyoutIcon>
        <ShellContent ContentTemplate="{DataTemplate views:CitationListPage}" Route="CitationListPage" />
    </FlyoutItem>

    <FlyoutItem Title="Events">
        <FlyoutItem.FlyoutIcon>
            <FontImageSource FontFamily="{StaticResource GlyphFontFamily}" Glyph="{x:Static common:CommonConstants.IconEvents}" />
        </FlyoutItem.FlyoutIcon>
        <ShellContent ContentTemplate="{DataTemplate views:EventListPage}" Route="EventListPage" />
    </FlyoutItem>

    <FlyoutItem Title="Families">
        <FlyoutItem.FlyoutIcon>
            <FontImageSource FontFamily="{StaticResource GlyphFontFamily}" Glyph="{x:Static common:CommonConstants.IconFamilies}" />
        </FlyoutItem.FlyoutIcon>
        <ShellContent ContentTemplate="{DataTemplate views:FamilyListPage}" Route="FamilyListPage" />
    </FlyoutItem>

    <FlyoutItem Title="Media">
        <FlyoutItem.FlyoutIcon>
            <FontImageSource FontFamily="{StaticResource GlyphFontFamily}" Glyph="{x:Static common:CommonConstants.IconMedia}" />
        </FlyoutItem.FlyoutIcon>
        <ShellContent ContentTemplate="{DataTemplate views:MediaListPage}" Route="MediaListPage" />
    </FlyoutItem>

    <FlyoutItem Title="Notes">
        <FlyoutItem.FlyoutIcon>
            <FontImageSource FontFamily="{StaticResource GlyphFontFamily}" Glyph="{x:Static common:CommonConstants.IconNotes}" />
        </FlyoutItem.FlyoutIcon>
        <ShellContent ContentTemplate="{DataTemplate views:NoteListPage}" Route="NoteListPage" />
    </FlyoutItem>

    <FlyoutItem Title="People">
        <FlyoutItem.FlyoutIcon>
            <FontImageSource FontFamily="{StaticResource GlyphFontFamily}" Glyph="{x:Static common:CommonConstants.IconPeople}" />
        </FlyoutItem.FlyoutIcon>
        <ShellContent ContentTemplate="{DataTemplate views:PersonListPage}" Route="PersonListPage" />
    </FlyoutItem>

    <FlyoutItem Title="Places">
        <FlyoutItem.FlyoutIcon>
            <FontImageSource FontFamily="{StaticResource GlyphFontFamily}" Glyph="{x:Static common:CommonConstants.IconPlace}" />
        </FlyoutItem.FlyoutIcon>
        <ShellContent ContentTemplate="{DataTemplate views:PlaceListPage}" Route="PlaceListPage" />
    </FlyoutItem>

    <FlyoutItem Title="Repositories">
        <FlyoutItem.FlyoutIcon>
            <FontImageSource FontFamily="{StaticResource GlyphFontFamily}" Glyph="{x:Static common:CommonConstants.IconRepository}" />
        </FlyoutItem.FlyoutIcon>
        <ShellContent ContentTemplate="{DataTemplate views:RepositoryListPage}" Route="RepositoryListPage" />
    </FlyoutItem>

    <FlyoutItem Title="Sources">
        <FlyoutItem.FlyoutIcon>
            <FontImageSource FontFamily="{StaticResource GlyphFontFamily}" Glyph="{x:Static common:CommonConstants.IconSource}" />
        </FlyoutItem.FlyoutIcon>
        <ShellContent ContentTemplate="{DataTemplate views:SourceListPage}" Route="SourceListPage" />
    </FlyoutItem>

    <FlyoutItem Title="Tags">
        <FlyoutItem.FlyoutIcon>
            <FontImageSource FontFamily="{StaticResource GlyphFontFamily}" Glyph="{x:Static common:CommonConstants.IconTag}" />
        </FlyoutItem.FlyoutIcon>
        <ShellContent ContentTemplate="{DataTemplate views:TagListPage}" Route="TagListPage" />
    </FlyoutItem>

    <FlyoutItem Title="People Graph">
        <FlyoutItem.FlyoutIcon>
            <FontImageSource FontFamily="{StaticResource GlyphFontFamily}" Glyph="{x:Static common:CommonConstants.IconPeopleGraph}" />
        </FlyoutItem.FlyoutIcon>
        <ShellContent ContentTemplate="{DataTemplate views:PeopleGraphPage}" Route="PeopleGraphPage" />
    </FlyoutItem>

    <FlyoutItem Title="Advanced Search">
        <FlyoutItem.FlyoutIcon>
            <FontImageSource FontFamily="{StaticResource GlyphFontFamily}" Glyph="{x:Static common:CommonConstants.IconSearch}" />
        </FlyoutItem.FlyoutIcon>
        <ShellContent ContentTemplate="{DataTemplate views:SearchPage}" Route="SearchPage" />
    </FlyoutItem>

    <FlyoutItem Title="Load Data File">
        <FlyoutItem.FlyoutIcon>
            <FontImageSource FontFamily="{StaticResource GlyphFontFamily}" Glyph="{x:Static common:CommonConstants.IconChooseDataFile}" />
        </FlyoutItem.FlyoutIcon>
        <ShellContent ContentTemplate="{DataTemplate views:FileInputHandlerPage}" Route="FileInputHandlerPage" />
    </FlyoutItem>

    <FlyoutItem Title="Settings">
        <FlyoutItem.FlyoutIcon>
            <FontImageSource FontFamily="{StaticResource GlyphFontFamily}" Glyph="{x:Static common:CommonConstants.IconSettings}" />
        </FlyoutItem.FlyoutIcon>
        <ShellContent ContentTemplate="{DataTemplate views:SettingsPage}" Route="SettingsPage" />
    </FlyoutItem>

    <FlyoutItem Title="About">
        <FlyoutItem.FlyoutIcon>
            <FontImageSource FontFamily="{StaticResource GlyphFontFamily}" Glyph="{x:Static common:CommonConstants.IconAbout}" />
        </FlyoutItem.FlyoutIcon>
        <ShellContent ContentTemplate="{DataTemplate views:AboutPage}" Route="AboutPage" />
    </FlyoutItem>

    <!--  Hidden pages  -->
    <FlyoutItem Title="MessageLog" IsVisible="False">
        <ShellContent ContentTemplate="{DataTemplate views:MessageLogPage}" Route="MessageLog" />
    </FlyoutItem>

    <FlyoutItem Title="FileInputHandler" IsVisible="False">
        <ShellContent ContentTemplate="{DataTemplate views:FileInputHandlerPage}" Route="FileInputHandlerPage" />
    </FlyoutItem>

    <FlyoutItem Title="FirstRun" IsVisible="False">
        <ShellContent ContentTemplate="{DataTemplate views:FirstRunPage}" Route="FirstRunPage" />
    </FlyoutItem>

    <FlyoutItem Title="NeedDatabaseReload" IsVisible="False">
        <ShellContent ContentTemplate="{DataTemplate views:NeedDatabaseReloadPage}" Route="NeedDatabaseReloadPage" />
    </FlyoutItem>

    <FlyoutItem Title="WhatsNew" IsVisible="False">
        <ShellContent ContentTemplate="{DataTemplate views:WhatsNewPage}" Route="WhatsNewPage" />
    </FlyoutItem>

    <!--  When the Flyout is visible this will be a menu item you can tie a click behavior to  -->
    <!--
    <MenuItem
        Clicked="OnMenuItemClicked"
        StyleClass="MenuItemLayoutStyle"
        Text="Logout" />-->

    <!-- Optional Templates
    // These may be provided inline as below or as separate classes.

    // This header appears at the top of the Flyout.
    // https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#flyout-header
    <Shell.FlyoutHeaderTemplate>
        <DataTemplate>
            <Grid>ContentHere</Grid>
        </DataTemplate>
    </Shell.FlyoutHeaderTemplate>

    // ItemTemplate is for ShellItems as displayed in a Flyout
    // https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#define-flyoutitem-appearance
    <Shell.ItemTemplate>
        <DataTemplate>
            <ContentView>
                Bindable Properties: Title, Icon
            </ContentView>
        </DataTemplate>
    </Shell.ItemTemplate>

    // MenuItemTemplate is for MenuItems as displayed in a Flyout
    // https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#define-menuitem-appearance
    <Shell.MenuItemTemplate>
        <DataTemplate>
            <ContentView>
                Bindable Properties: Text, Icon
            </ContentView>
        </DataTemplate>
    </Shell.MenuItemTemplate>

    -->
</Shell>